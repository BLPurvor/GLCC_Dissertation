// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("ADMIN_DB_URL")
}

enum Role {
  user
  volunteer
  admin
}

model User {
  id             String     @id @default(uuid()) @map("_id")
  email          String     @unique
  email_verified Boolean    @default(false)
  first_name     String?
  last_name      String?
  role           String     @default("user")
  username       String     @unique
  password       String
  created_at     DateTime
  updated_at     DateTime
  wallet         Wallet     @relation(fields: [wallet_id], references: [id])
  wallet_id      String
  entries        Entry[]
  Gameweek       Gameweek[]
}

// type Match {
//   match_id   String
//   home_score Int?
//   away_score Int?
//   result     String
// }

model Gameweek {
  id          Int     @id @default(autoincrement()) @map("_id")
  prize       Int
  did_payout  Boolean @default(false)
  author      User    @relation(fields: [author_name], references: [username])
  author_name String
  deadline    String
  matches     String  @db.VarChar(255)
  entries     Entry[]
}

model Entry {
  id          String   @id @default(uuid()) @map("_id")
  datetime    DateTime
  user        User     @relation(fields: [user_id], references: [id])
  user_id     String
  won         Boolean  @default(false)
  prediction  String   @db.VarChar(1023)
  Gameweek    Gameweek @relation(fields: [gameweek_id], references: [id])
  gameweek_id Int
}

// type Tokens {
//   subs Int
//   teas Int
// }

model Wallet {
  id           String        @id @default(uuid()) @map("_id")
  cash_value   Float
  tokens       String        @db.VarChar(255)
  transactions Transaction[]
  User         User[]
}

model Transaction {
  id        String   @id @default(uuid()) @map("_id")
  amount    Float
  datetime  DateTime
  Wallet    Wallet   @relation(fields: [wallet_id], references: [id])
  wallet_id String
}
